{
  "name": "loopback4-example-shopping-monorepo",
  "version": "1.0.0",
  "description": "Root package to manage monorepo for LoopBack 4 Example: Online Shopping APIs",
  "keywords": [
    "loopback-application",
    "loopback"
  ],
  "main": "index.js",
  "engines": {
    "node": ">=8.9"
  },
  "scripts": {
    "build": "lb-tsc",
    "build:watch": "lb-tsc --watch",
    "clean": "lb-clean dist *.tsbuildinfo",
    "lint": "npm run prettier:check && npm run eslint",
    "lint:fix": "npm run eslint:fix && npm run prettier:fix",
    "prettier:cli": "lb-prettier \"**/*.ts\" \"**/*.js\"",
    "prettier:check": "npm run prettier:cli -- -l",
    "prettier:fix": "npm run prettier:cli -- --write",
    "eslint": "lb-eslint --report-unused-disable-directives .",
    "eslint:fix": "npm run eslint -- --fix",
    "pretest": "npm run clean && npm run build",
    "test": "lb-mocha --allow-console-logs \"dist/__tests__\"",
    "posttest": "npm run lint",
    "test:dev": "lb-mocha --allow-console-logs dist/__tests__/**/*.js && npm run posttest",
    "docker:build": "docker build -t chat-app .",
    "docker:run": "docker run -p 3000:3000 -d chat-app",
    "migrate": "node ./dist/migrate",
    "prestart": "npm run build",
    "start": "node -r source-map-support/register .",
    "prepublishOnly": "npm run test"
  },
  "repository": {
    "type": "git"
  },
  "files": [
    "README.md",
    "index.js",
    "index.d.ts",
    "dist",
    "src",
    "!*/__tests__"
  ],
  "private": true,
  "license": "MIT",
  "dependencies": {
    "@loopback/authentication": "3.0.1",
    "@loopback/boot": "1.5.6",
    "@loopback/context": "1.23.0",
    "@loopback/core": "1.10.2",
    "@loopback/openapi-v3": "1.9.7",
    "@loopback/repository": "1.14.0",
    "@loopback/rest": "1.19.0",
    "@loopback/rest-explorer": "1.3.7",
    "@loopback/service-proxy": "1.3.6",
    "@panva/jose": "^1.9.2",
    "@types/jsonwebtoken": "8.3.4",
    "@types/lodash": "^4.14.138",
    "bcryptjs": "^2.4.3",
    "debug": "4.1.1",
    "express": "4.17.1",
    "isemail": "3.2.0",
    "jsonwebtoken": "8.5.1",
    "lodash": "4.17.21",
    "loopback-connector-kv-redis": "3.0.1",
    "loopback-connector-mongodb": "5.0.1",
    "loopback-connector-rest": "3.5.0",
    "nodemailer": "^6.3.0",
    "uuid": "^3.3.3"
  },
  "devDependencies": {
    "@commitlint/cli": "8.2.0",
    "@commitlint/config-conventional": "8.2.0",
    "@commitlint/config-lerna-scopes": "8.2.0",
    "@commitlint/travis-cli": "8.2.0",
    "@loopback/build": "2.0.11",
    "@loopback/eslint-config": "4.1.0",
    "@loopback/testlab": "1.8.1",
    "@types/bcryptjs": "^2.4.2",
    "@types/node": "12.7.5",
    "@types/nodemailer": "^6.2.1",
    "@typescript-eslint/eslint-plugin": "2.3.0",
    "@typescript-eslint/parser": "2.3.0",
    "commitizen": "4.0.3",
    "concurrently": "4.1.2",
    "cz-conventional-changelog": "3.0.2",
    "eslint": "6.4.0",
    "eslint-config-prettier": "6.3.0",
    "eslint-plugin-eslint-plugin": "2.1.0",
    "eslint-plugin-mocha": "6.1.1",
    "husky": "3.0.5",
    "lerna": "3.16.4",
    "loopback-connector-mysql": "^5.4.2",
    "mocha": "6.2.0",
    "source-map-support": "0.5.13",
    "typescript": "3.6.3"
  },
  "copyright.owner": "Young Prod Corp.",
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    }
  },
  "greenkeeper": {
    "commitMessages": {
      "initialBadge": "docs: add Greenkeeper badge",
      "initialDependencies": "chore: update dependencies",
      "initialBranches": "chore: whitelist greenkeeper branches",
      "dependencyUpdate": "chore: update ${dependency} to version ${version}",
      "devDependencyUpdate": "chore: update ${dependency} to version ${version}",
      "dependencyPin": "chore: pin ${dependency} to ${oldVersion}",
      "devDependencyPin": "chore: pin ${dependency} to ${oldVersion}",
      "lockfileUpdate": "chore: update lockfile ${lockfilePath}"
    },
    "prTitles": {
      "initialPR": "[greenkeeper] update dependencies to enable Greenkeeper",
      "initialPrBadge": "[greenkeeper] add badge to enable Greenkeeper",
      "initialPrBadgeOnly": "[greenkeeper] add Greenkeeper badge",
      "initialSubgroupPR": "[greenkeeper] update dependencies for ${group}",
      "basicPR": "[greenkeeper] update ${dependency} to the latest",
      "groupPR": "[greenkeeper] update ${dependency} in group ${group} to the latest"
    }
  }
}
